name: Deploy CloudFormation

on:
  push:
    branches:
      - main

jobs:
  deploy:
    needs: test
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Check if S3 Bucket Exists
        id: check_bucket
        run: |
          if aws s3 ls "s3://my-demo-s3-bucket-test-project-11" 2>&1 | grep -q 'NoSuchBucket'; then
            echo "bucket_exists=false" >> $GITHUB_ENV
          else
            echo "bucket_exists=true" >> $GITHUB_ENV
          fi
      - name: Create S3 Bucket if Not Exists
        if: env.bucket_exists == 'false'
        run: |
          aws s3api create-bucket --bucket my-demo-s3-bucket-test-project-11 --region $AWS_REGION

      - name: Upload nested stack templates to S3
        run: |
          aws s3 cp ./WrPro/root-stack.yaml s3://my-demo-s3-bucket-test-project-11/root-stack.yaml
          aws s3 cp ./WrPro/vpc-stack.yaml s3://my-demo-s3-bucket-test-project-11/vpc-stack.yaml
          aws s3 cp ./WrPro/parameters-dev.json s3://my-demo-s3-bucket-test-project-11/parameters-dev.json
      
      - name: Check status of Previously Deployed stacks
        id: check_main_stack
        run: |
          STACK_STATUS=$(aws cloudformation describe-stacks --stack-name main-stack --query "Stacks[0].StackStatus" --output text || echo "STACK_NOT_FOUND")
          echo "main Stack Status: $STACK_STATUS"
          echo "::set-output name=stack_status::$STACK_STATUS"

      - name: Delete main stack if main stack is in DELETE_IN_PROGRESS state
        if: steps.check_main_stack.outputs.stack_status == 'DELETE_IN_PROGRESS'
        run: |
          echo "Deleting main stack..."
          aws cloudformation wait stack-delete-complete --stack-name main-stack
          echo "Delete Complete..."
        
      - name: Delete main stack if main stack is in ROLLBACK_COMPLETE state
        if: steps.check_main_stack.outputs.stack_status == 'ROLLBACK_COMPLETE' || 'CREATE_COMPLETE'
        run: |
          echo "Deleting main stack..."
          aws cloudformation delete-stack --stack-name main-stack
          aws cloudformation wait stack-delete-complete --stack-name main-stack
          echo "Delete Complete..."

      - name: Deploy CloudFormation stack
        run: |
          aws cloudformation deploy \
            --stack-name ${{ matrix.environment }}-vpc \
            --template-file root-stack.yaml \
            --parameter-overrides $(cat parameters-${{ matrix.environment }}.json | jq -r 'to_entries | map("\(.key)=\(.value)") | .[]') \
              S3BucketName=my-demo-s3-bucket-test-project-18 \
              AccessControl=Private \
              VersioningStatus=Enabled \
            --capabilities CAPABILITY_NAMED_IAM
